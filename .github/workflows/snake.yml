name: Generate Snake

# Corre automáticamente cada 6 horas
on:
  schedule:
    - cron: "0 */6 * * *"  # Ejecuta cada 6 horas
  workflow_dispatch:  # Permite ejecutarlo manualmente

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clona el repositorio
      - name: Checkout
        uses: actions/checkout@v3

      # Paso 2: Paso de depuración para confirmar si el flujo de trabajo fue activado
      - name: Debugging step
        run: echo "Workflow triggered manually."

      # Paso 3: Generar la animación de la serpiente
      - name: Generate Snake
        uses: Platane/snk@v3
        with:
          github_user_name: rafaelchuco
          # Si la acción tiene un parámetro de directorio de salida, asegúrate de configurarlo correctamente
          output_dir: dist  # Este es solo un ejemplo, revisa la documentación de la acción

      # Paso 4: Verificar que la acción haya generado los archivos
      - name: List all files in the repository after generating snake
        run: |
          echo "Listing all files in the repository:"
          ls -la

      # Paso 5: Asegurarse de que el directorio 'dist' exista
      - name: Create dist directory
        run: mkdir -p dist

      # Paso 6: Listar los archivos dentro de dist para depuración
      - name: List files in dist directory
        run: ls -la dist

      # Paso 7: Crear un archivo de salida manualmente para la ruta de los archivos generados
      - name: Set output paths
        run: |
          echo "OUTPUT_SVG=dist/github-contribution-grid-snake.svg" >> $GITHUB_ENV
          echo "OUTPUT_GIF=dist/github-contribution-grid-snake.gif" >> $GITHUB_ENV

      # Paso 8: Publicar los archivos generados en la rama 'output'
      - name: Deploy to output branch
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
